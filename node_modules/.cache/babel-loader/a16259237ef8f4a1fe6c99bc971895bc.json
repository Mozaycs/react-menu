{"ast":null,"code":"var _jsxFileName = \"/Users/parhamjf/Desktop/NewProjects/NewNew/my-app/src/BurgerIcon.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport default class BurgerIcon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  getLineStyle(index) {\n    return {\n      position: 'absolute',\n      height: '20%',\n      left: 0,\n      right: 0,\n      top: 20 * (index * 2) + '%',\n      opacity: this.state.hover ? 0.6 : 1,\n      ...(this.state.hover && this.props.styles.bmBurgerBarsHover)\n    };\n  }\n\n  render() {\n    let icon;\n    let buttonStyle = {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%',\n      margin: 0,\n      padding: 0,\n      border: 'none',\n      fontSize: 0,\n      background: 'transparent',\n      cursor: 'pointer'\n    };\n\n    if (this.props.customIcon) {\n      let extraProps = {\n        className: `bm-icon ${this.props.customIcon.props.className || ''}`.trim(),\n        style: { ...{\n            width: '100%',\n            height: '100%'\n          },\n          ...this.props.styles.bmIcon\n        }\n      };\n      icon = React.cloneElement(this.props.customIcon, extraProps);\n    } else {\n      icon = /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, [0, 1, 2].map(bar => /*#__PURE__*/React.createElement(\"span\", {\n        key: bar,\n        className: `bm-burger-bars ${this.props.barClassName} ${this.state.hover ? 'bm-burger-bars-hover' : ''}`.trim(),\n        style: { ...this.getLineStyle(bar),\n          ...this.props.styles.bmBurgerBars\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `bm-burger-button ${this.props.className}`.trim(),\n      style: { ...{\n          zIndex: 1000\n        },\n        ...this.props.styles.bmBurgerButton\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, icon, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.onClick,\n      onMouseOver: () => {\n        this.setState({\n          hover: true\n        });\n        if (this.props.onIconHoverChange) this.props.onIconHoverChange({\n          isMouseIn: true\n        });\n      },\n      onMouseOut: () => {\n        this.setState({\n          hover: false\n        });\n        if (this.props.onIconHoverChange) this.props.onIconHoverChange({\n          isMouseIn: false\n        });\n      },\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Open Menu\"));\n  }\n\n}\nBurgerIcon.propTypes = {\n  barClassName: PropTypes.string,\n  customIcon: PropTypes.element,\n  styles: PropTypes.object\n};\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};","map":{"version":3,"sources":["/Users/parhamjf/Desktop/NewProjects/NewNew/my-app/src/BurgerIcon.js"],"names":["React","Component","PropTypes","BurgerIcon","constructor","props","state","hover","getLineStyle","index","position","height","left","right","top","opacity","styles","bmBurgerBarsHover","render","icon","buttonStyle","width","margin","padding","border","fontSize","background","cursor","customIcon","extraProps","className","trim","style","bmIcon","cloneElement","map","bar","barClassName","bmBurgerBars","zIndex","bmBurgerButton","onClick","setState","onIconHoverChange","isMouseIn","propTypes","string","element","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class BurgerIcon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  getLineStyle(index) {\n    return {\n      position: 'absolute',\n      height: '20%',\n      left: 0,\n      right: 0,\n      top: 20 * (index * 2) + '%',\n      opacity: this.state.hover ? 0.6 : 1,\n      ...(this.state.hover && this.props.styles.bmBurgerBarsHover)\n    };\n  }\n\n  render() {\n    let icon;\n    let buttonStyle = {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%',\n      margin: 0,\n      padding: 0,\n      border: 'none',\n      fontSize: 0,\n      background: 'transparent',\n      cursor: 'pointer'\n    };\n\n    if (this.props.customIcon) {\n      let extraProps = {\n        className: `bm-icon ${this.props.customIcon.props.className || ''}`.trim(),\n        style: {\n          ...{ width: '100%', height: '100%' },\n          ...this.props.styles.bmIcon\n        }\n      };\n      icon = React.cloneElement(this.props.customIcon, extraProps);\n    } else {\n      icon = (\n        <span>\n          {[0, 1, 2].map(bar => (\n            <span\n              key={bar}\n              className={`bm-burger-bars ${this.props.barClassName} ${this.state.hover ? 'bm-burger-bars-hover' : ''}`.trim()}\n              style={{\n                ...this.getLineStyle(bar),\n                ...this.props.styles.bmBurgerBars\n              }}\n            />\n          ))}\n        </span>\n      );\n    }\n\n    return (\n      <div\n        className={`bm-burger-button ${this.props.className}`.trim()}\n        style={{\n          ...{ zIndex: 1000 },\n          ...this.props.styles.bmBurgerButton\n        }}\n      >\n        {icon}\n        <button\n          onClick={this.props.onClick}\n          onMouseOver={() => {\n            this.setState({ hover: true });\n            if (this.props.onIconHoverChange) this.props.onIconHoverChange({ isMouseIn: true });\n          }}\n          onMouseOut={() => {\n            this.setState({ hover: false });\n            if (this.props.onIconHoverChange) this.props.onIconHoverChange({ isMouseIn: false });\n          }}\n          style={buttonStyle}\n        >\n          Open Menu\n        </button>\n      </div>\n    );\n  }\n}\n\nBurgerIcon.propTypes = {\n  barClassName: PropTypes.string,\n  customIcon: PropTypes.element,\n  styles: PropTypes.object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\n"]},"metadata":{},"sourceType":"module"}